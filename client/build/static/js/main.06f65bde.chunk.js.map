{"version":3,"sources":["Components/landingpage.js","Components/home.js","Components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","style","width","margin","className","col","Component","Home","Main","exact","path","component","LandingPage","require","default","get","then","res","console","log","catch","err","App","height","position","background","transparent","title","color","value","onChange","label","expandable","expandableIcon","to","size","backgroundcolor","type","logo","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"kQAkBeA,E,uKAbP,OACI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,W,GALRC,a,QCeRC,E,uKAbP,OACI,yBAAKN,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,W,GALZC,aCgBJE,EATF,kBACb,kBAAC,SAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,UAAWC,IAClC,kBAAC,IAAD,CAAOF,KAAM,QAAQC,UAAWJ,MCNtBM,EAAQ,KAASC,QAOzBC,IAAN,UAJY,uGAIZ,oBACOC,MAAK,SAASC,GACXC,QAAQC,IAAIF,MAEfG,OAAM,SAAUC,GACbH,QAAQC,IAAIE,MAEfL,MAAK,eA0DGM,MArDf,WACE,OACI,yBAAKrB,MAAO,CAACsB,OAAQ,QAASC,SAAU,aAC1C,kBAAC,SAAD,CAAQvB,MAAO,CAACwB,WAAY,qIACxB,kBAAC,SAAD,CAAQC,aAAW,EAACC,MAAM,qBAAqB1B,MAAO,CAAC2B,MAAO,UAC1D,kBAAC,YAAD,KACI,kBAAC,YAAD,CACIC,MAAM,GACNC,SAAU,aACVC,MAAM,UACNC,YAAU,EACVC,eAAe,YAGvB,kBAAC,YAAD,KACI,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAMC,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,qBACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAIR,kBAAC,SAAD,CAAQP,MAAM,IACV,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAMO,GAAG,SAAT,QACI,kBAAC,IAAD,CAAMA,GAAG,gBAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,qBACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,UAAD,KACA,kBAAC,EAAD,QAMJ,kBAAC,SAAD,CAAQC,KAAK,OAAOlC,MAAO,CAACmC,gBAAgB,UAChD,kBAAC,gBAAD,CAAeC,KAAK,OAAOC,KAAK,IAC5B,kBAAC,iBAAD,KACH,yBAAKlC,UAAU,UAAUH,MAAO,CAAC2B,MAAO,YAAaW,SAAS,eCvD3CC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdjC,OAAM,SAAAkC,GACLpC,QAAQoC,MAAMA,EAAMC,a","file":"static/js/main.06f65bde.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass  Landing extends Component {\n    render() { \n        return ( \n            <div style={{width: '100%', margin: 'auto'}}>\n                <Grid className='landing-grid'>\n                    <Cell col={12}>\n                        \n                    </Cell>\n\n                </Grid>\n            </div>\n         );\n    }\n}\n \nexport default Landing;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Grid className='landing-grid'>\n                    <Cell col={12}>\n\n                    </Cell>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Switch } from 'react-mdl';\nimport './main.css';\nimport LandingPage from './landingpage';\nimport { Route } from 'react-router-dom';\nimport Home from './home';\n// import Contact from './contact'\n\n\n\nconst Main = () => (\n<Switch>\n    <Route exact path= \"/\" component={LandingPage} />\n    <Route path= \"/home\" component={Home} />\n    {/* <Route path= \"/contact\" component={Contact} /> */}\n\n</Switch>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Textfield, Drawer, Content, Footer, FooterSection, FooterLinkList, HeaderRow } from 'react-mdl';\nimport {Link} from 'react-router-dom'\nimport Main from './Components/main';\n\n//axios variable import for api query\nconst axios = require('axios').default;\n\n//URL for google Maps\nconst URL = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyAQV4OnQ1CIWg_QP0L_yL1lsftxK5K6CUs&libraries=places';\n\n\n//base query function\naxios.get(`${URL}=handleResponse`)\n      .then(function(res) {\n          console.log(res)\n      })\n      .catch(function (err) {\n          console.log(err)\n      })\n      .then(function () {\n\n      });\n\n\nfunction App() {\n  return (\n      <div style={{height: '300px', position: 'relative'}}>\n    <Layout style={{background: 'url(https://images.pexels.com/photos/247929/pexels-photo-247929.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940) center / cover'}}>\n        <Header transparent title=\"Garage Sale Finder\" style={{color: 'white'}}>\n            <HeaderRow>\n                <Textfield\n                    value=\"\"\n                    onChange={() => {}}\n                    label=\"Search2\"\n                    expandable\n                    expandableIcon=\"search\"\n                />\n            </HeaderRow>\n            <HeaderRow>\n                <Navigation>\n                <Link to=\"/home\">Home</Link>\n                <Link to=\"/landingpage\">Seeker</Link>\n                <Link to=\"/modal\">Log in or Sign up</Link>\n                <Link to=\"/contact\">Contact</Link>\n                </Navigation>\n            </HeaderRow>\n        </Header>\n        <Drawer title=\"\">\n            <Navigation>\n            <Link to=\"/home\">Home</Link>\n                <Link to=\"/landingpage\">Seeker</Link>\n                <Link to=\"/modal\">Log in or Sign up</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n        <Main/>\n        </Content>\n        </Layout>\n       \n\n\n    <Footer size=\"mini\" style={{backgroundcolor:'black'}}>\n<FooterSection type=\"left\" logo=\"\">\n    <FooterLinkList>\n <div className=\"wrapper\" style={{color: 'aliceblue', fontSize:'20px'}}>\n    </div>\n       </FooterLinkList>\n</FooterSection>\n</Footer>\n\n</div>\n\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n// import './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n  // <React.StrictMode>\n   \n  // </React.StrictMode>,\n  \n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}